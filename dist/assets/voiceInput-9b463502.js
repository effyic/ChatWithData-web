import{_ as F,r as B,P as N,o as P,c as q,a as Q,Q as G,R as Y}from"./index-149fb877.js";const j=.1,J=5,K=2e3,X={__name:"voiceInput",emits:["transcript"],setup(Z,{expose:k,emit:z}){const x=z,p=B(null),R=B(null);let i=null,c=null,r=null,v=null,f=null,s=null,m=[],l=[],b=0,h=!1,u=null;const g=B(!0),T=()=>{const e=p.value,n=R.value,t=window.devicePixelRatio||1,o=n.clientWidth,a=n.clientHeight;e.width=o*t,e.height=a*t,e.style.width=o+"px",e.style.height=a+"px";const w=e.getContext("2d");w.setTransform(1,0,0,1,0,0),w.scale(t,t);const _=Math.floor(o/(4+2));l.length!==_&&(l=new Array(_).fill(0))},D=()=>{f=new ResizeObserver(()=>{T()}),f.observe(R.value)},M=async e=>{const n=new FormData;n.append("file",e,"recording.webm");const t=await Y.transcriptions(n);return console.log(t),t.asr_text||""},O=()=>{g.value&&(m=[],s.start(),h=!0,console.log("开始录音"))},I=async()=>{h&&(h=!1,u=null,s.stop())},C=()=>{if(v=requestAnimationFrame(C),!c||!r)return;c.getByteTimeDomainData(r);const e=r.reduce((d,y)=>d+Math.abs(y-128),0)/r.length,n=b+(e-b)*j;b=n;const t=p.value,o=t.getContext("2d"),a=window.devicePixelRatio||1,w=t.width/a,S=t.height/a,A=4,_=2,L=l.length,U=n/128*S*.8;l.pop(),l.unshift(U),o.clearRect(0,0,t.width,t.height);for(let d=0;d<L;d++){const y=l[d],V=w-(d+1)*(A+_),W=(S-y)/2;o.fillStyle="black",o.fillRect(V,W,A,y)}n>J?(g.value&&!h&&O(),u&&(clearTimeout(u),u=null)):g.value&&h&&!u&&(u=setTimeout(()=>{I()},K))},H=async()=>{await G(),T(),D();try{const e=await navigator.mediaDevices.getUserMedia({audio:!0});i=new AudioContext;const n=i.createMediaStreamSource(e);c=i.createAnalyser(),c.fftSize=128;const t=c.frequencyBinCount;r=new Uint8Array(t),n.connect(c),C(),s=new MediaRecorder(e,{mimeType:"audio/webm"}),s.ondataavailable=o=>{o.data.size>0&&m.push(o.data)},s.onstop=async()=>{if(m.length===0){console.log("无录音数据");return}const o=new Blob(m,{type:"audio/webm"});try{const a=await M(o);x("transcript",a)}catch(a){console.error("转写失败:",a),x("transcript","")}}}catch(e){console.error("获取麦克风失败:",e),x("transcript","")}},E=()=>{v&&cancelAnimationFrame(v),v=null,s&&s.state!=="inactive"&&s.stop(),i&&(i.close(),i=null),c=null,r=null,f&&(f.disconnect(),f=null);const e=p.value;e&&e.getContext("2d").clearRect(0,0,e.width,e.height)};return k({start:H,stop:E,setAutoSend:e=>{g.value=e,console.log("自动发送状态：",e)}}),N(()=>{E()}),(e,n)=>(P(),q("div",{class:"voice-visualizer",ref_key:"containerRef",ref:R},[Q("canvas",{ref_key:"canvasRef",ref:p},null,512)],512))}},ee=F(X,[["__scopeId","data-v-edf16311"]]);export{ee as default};
